/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package micrometer.escaping.repro

import io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics
import io.micrometer.core.instrument.config.NamingConvention
import io.micrometer.influx.InfluxConfig
import io.micrometer.influx.InfluxMeterRegistry
import java.io.Closeable
import java.time.Duration

class Metrics() : Closeable {
    private val influxProperties = mapOf(
            "influx.uri" to "http://localhost:8086"
    )

    private val influxConfig = object : InfluxConfig {
        override fun step() = Duration.ofSeconds(1)
        override fun db() = "metrics"
        override fun get(key: String): String? = influxProperties[key]
    }

    private val registry = InfluxMeterRegistry
            .builder(influxConfig)
            .build()
            .apply {
                config().namingConvention(NamingConvention.dot)
            }

    init {
        JvmMemoryMetrics().bindTo(registry)

        registry.start { runnable ->
            Thread(runnable).apply {
                name = "metrics-daemon"
                isDaemon = true
            }
        }
    }

    override fun close() {
        registry.close()
    }
}

fun main(args: Array<String>) {
    Metrics().use {
        Thread.sleep(10_000)
    }
}
